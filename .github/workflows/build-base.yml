name: Build Base Image

on:
  # push:
  workflow_dispatch:
    inputs:
      event:
        description: 'Input your event'
        required: true
        default: ''

env:
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

jobs:
  build:
    name: Build Base Image
    runs-on: 'ubuntu-latest'
    env:
      PHP_VERSION: '${{ matrix.php-version }}'
      ALPINE_VERSION: '${{ matrix.alpine-version }}'
    strategy:
      matrix:
        php-version: [ '8.0', '8.1', '8.2' ]
        alpine-version: [ '3.14', '3.15', '3.16', '3.17', 'edge' ]
        # platform-architecture: [ 'linux/amd64', 'linux/arm64' ]
        exclude:
          - php-version: '8.2'
            alpine-version: '3.14'
          - php-version: '8.2'
            alpine-version: '3.15'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.14'
          - php-version: '8.1'
            alpine-version: '3.15'
          - php-version: '8.0'
            alpine-version: '3.17'
          - php-version: '8.0'
            alpine-version: 'edge'
      max-parallel: 12
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,amd64
      - name: Set up Docker Buildx
        id: buildx 
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          buildkitd-flags: --oci-worker-snapshotter=stargz
      - name: Build
        run: |
          docker info 
          docker info --format="{{ .Driver }}"
          docker buildx bake \
            -f docker-compose.yml \
            --builder ${{ steps.buildx.outputs.name }} \
            --set *.platform=linux/amd64,linux/arm64  \
            --load \
            alpine-base
          docker images
      - name: Push Images to Docker Hub
        if: ${{ github.event.inputs.event == 'publish' }}
        run: |
          docker images
          docker login --username qiqizjl -p $DOCKERHUB_TOKEN
          docker push qiqizjl/hyperf:${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-base


