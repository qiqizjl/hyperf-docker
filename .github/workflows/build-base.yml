name: Build Base Image

on:
  # push:
  workflow_dispatch:
    inputs:
      event:
        description: 'Input your event'
        required: true
        default: ''

jobs:
  build:
    name: Build Base Image
    runs-on: 'ubuntu-latest'
    env:
      PHP_VERSION: '${{ matrix.php-version }}'
      ALPINE_VERSION: '${{ matrix.alpine-version }}'
    strategy:
      matrix:
        php-version: [ '8.0', '8.1', '8.2' ]
        alpine-version: [ '3.14', '3.15', '3.16', '3.17', 'edge' ]
        # platform-architecture: [ 'linux/amd64', 'linux/arm64' ]
        exclude:
          - php-version: '8.2'
            alpine-version: '3.14'
          - php-version: '8.2'
            alpine-version: '3.15'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.14'
          - php-version: '8.1'
            alpine-version: '3.15'
          - php-version: '8.0'
            alpine-version: '3.17'
          - php-version: '8.0'
            alpine-version: 'edge'
      max-parallel: 12
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,amd64
      - name: Set up Docker Buildx
        id: buildx 
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Login
        uses: docker/login-action@v2
        with:
          username: qiqizjl
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}
      - name: Build and Push
        uses: docker/bake-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          files: docker-compose.yml
          set: |
            *.platform=linux/amd64,linux/arm64
          targets: alpine-base
          push: ${{ github.event.inputs.event == 'publish' }}